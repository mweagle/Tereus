// Copyright (c) 2015 Matt Weagle (mweagle@gmail.com)

// Permission is hereby granted, free of charge, to
// any person obtaining a copy of this software and
// associated documentation files (the "Software"),
// to deal in the Software without restriction,
// including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so,
// subject to the following conditions:

// The above copyright notice and this permission
// notice shall be included in all copies or substantial
// portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF
// ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
// TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
// SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
// IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
package com.mweagle.tereus.commands.evaluation.create;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import com.google.common.base.Preconditions;
import com.google.gson.JsonParser;
import com.mweagle.tereus.INashornEvaluationAccumulator;
import com.mweagle.tereus.INashornEvaluatorContext;

/**
 * Created by mweagle on 4/26/15.
 */
public class CloudFormationTemplateUtils implements INashornEvaluationAccumulator {

    public String stackName = "";
    public String expandedTemplate = "";
    public String parameterizedTemplate = "";

    @Override
    public String bind(INashornEvaluatorContext context)
    {
        return "__templateTunnel";
    }

    @Override
    public Map<String, Object> getAccumulationResult() {
        Map<String, Object> map = new HashMap<>();

        Preconditions.checkArgument(isValidResult(this.stackName),
                                    "Invalid StackName generated by evaluation: %s", this.stackName);
        Preconditions.checkArgument(isValidResult(this.expandedTemplate),
                "Invalid template content generated by evaluation");
        Preconditions.checkArgument(isValidResult(this.parameterizedTemplate),
                "Invalid template parameterized content generated by evaluation");

        map.put("StackName", this.stackName);
        map.put("Template", new JsonParser().parse(this.expandedTemplate));
        map.put("ParameterizedTemplate", new JsonParser().parse(this.parameterizedTemplate));
        return Collections.unmodifiableMap(map);
    }

    protected boolean isValidResult(String argument)
    {
        return (null != argument &&
                argument.trim().length() > 0);
    }
}
