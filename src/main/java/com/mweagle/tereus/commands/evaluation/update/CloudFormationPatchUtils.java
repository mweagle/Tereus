//Copyright (c) 2015 Matt Weagle (mweagle@gmail.com)

//Permission is hereby granted, free of charge, to
//any person obtaining a copy of this software and
//associated documentation files (the "Software"),
//to deal in the Software without restriction,
//including without limitation the rights to use,
//copy, modify, merge, publish, distribute, sublicense,
//and/or sell copies of the Software, and to permit
//persons to whom the Software is furnished to do so,
//subject to the following conditions:

//The above copyright notice and this permission
//notice shall be included in all copies or substantial
//portions of the Software.

//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF
//ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
//TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
//PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
//SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
//CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
//OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
//IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
package com.mweagle.tereus.commands.evaluation.update;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import com.google.common.base.Preconditions;
import com.google.gson.JsonParser;
import com.mweagle.tereus.INashornEvaluationAccumulator;
import com.mweagle.tereus.INashornEvaluatorContext;

/**
* Created by mweagle on 7/30/15.
*/
public class CloudFormationPatchUtils implements INashornEvaluationAccumulator {

    public String stackName = "";
    public String patchContents = "";
    public String patchTarget = "";
    public String appliedResult = "";

    @Override
    public String bind(INashornEvaluatorContext context) {
        return "__patchTunnel";
    }

    @Override
    public Map<String, Object> getAccumulationResult() {
        Map<String, Object> map = new HashMap<>();

        Preconditions.checkArgument(isValidResult(this.stackName),
                "Invalid PatchName generated by evaluation: %s", this.stackName);
        Preconditions.checkArgument(isValidResult(this.patchContents),
                "Invalid patch content generated by evaluation");

        map.put("StackName", this.stackName);
        map.put("Patch", new JsonParser().parse(this.patchContents));
        map.put("Target", new JsonParser().parse(this.patchTarget));
        map.put("Result", new JsonParser().parse(this.appliedResult));
        return Collections.unmodifiableMap(map);
    }

    protected boolean isValidResult(String argument) {
        return (null != argument &&
                argument.trim().length() > 0);
    }
}
